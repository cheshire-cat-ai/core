name: Create tag

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_toml.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - name: Read TOML
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'core/pyproject.toml'
          field: 'project.version'
      - name: Publish tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: "${{steps.read_toml.outputs.value}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          id: publish_tag
          run: echo "::set-output name=tag::${{ steps.read_toml.outputs.value }}"

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Uses the `docker/setup-qemu-action@v3`
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Uses the `docker/setup-buildx-action@v3`
      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v3

      # Uses the `docker/login-action`
      # action to log in to the Container registry using the account and password that will publish the packages.
      # Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about)
      # to extract tags and labels that will be applied to the specified image.
      # The `id` "meta" allows the output of this step to be referenced in a subsequent step.
      # The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`.
      # If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path.
      # For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
         context: core/
         push: true
         tags: ghcr.io/${{ github.repository }}:latest , ghcr.io/${{ github.repository }}:${{ needs.tag.outputs.tag }}
         platforms: linux/amd64,linux/arm64
         provenance: false